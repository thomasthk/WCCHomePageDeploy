"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2143],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),u=r,f=m["".concat(l,".").concat(u)]||m[u]||d[u]||i;return n?a.createElement(f,o(o({ref:t},p),{},{components:n})):a.createElement(f,o({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9209:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var a=n(3117),r=n(102),i=(n(7294),n(3905)),o=["components"],s={id:"entity_schemas",title:"Entity Schemas",sidebar_label:"Entity Schemas"},l=void 0,c={unversionedId:"entities/entity_schemas",id:"entities/entity_schemas",title:"Entity Schemas",description:"The core of the CMS are entities, which are defined by an EntitySchema. In",source:"@site/docs/entities/entity_schemas.md",sourceDirName:"entities",slug:"/entities/entity_schemas",permalink:"/docs/entities/entity_schemas",tags:[],version:"current",frontMatter:{id:"entity_schemas",title:"Entity Schemas",sidebar_label:"Entity Schemas"},sidebar:"docsSidebar",previous:{title:"Quickstart",permalink:"/docs/quickstart"},next:{title:"Properties",permalink:"/docs/entities/properties/properties_intro"}},p=[{value:"Sample entity schema",id:"sample-entity-schema",children:[],level:3}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The core of the CMS are ",(0,i.kt)("strong",{parentName:"p"},"entities"),", which are defined by an ",(0,i.kt)("inlineCode",{parentName:"p"},"EntitySchema"),". In\nthe schema you define the properties, which are related to the Firestore data\ntypes."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"properties")," you define for your entity schema, will be used to\ngenerate the fields in the spreadsheet like collection tables, and the fields\nin the generated forms."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"FireCMS provides around 15 different fields (such as text fields, selects, and\ncomplex ones like reference or sortable array fields). If your use case is not\ncovered by one of the provided fields, you can create your own ",(0,i.kt)("a",{parentName:"p",href:"/docs/entities/custom_fields"},"custom field"),"."))),(0,i.kt)("p",null,"Check the full API reference in ",(0,i.kt)("a",{parentName:"p",href:"../api/interfaces/entityschema"},"Entity schema API")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"name")," A singular name of the entity as displayed in an Add button. E.g.\nProduct")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"description")," Description of this entity.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"customId")," If this prop is not set, the ID of the document will be created by\nthe datasource. You can set the value to 'true' to force the users to choose\nthe ID. You can set the value to 'optional' to allow the users to choose the\nID. If the ID is empty, an automatic ID will be set. You can also pass a set\nof values (as an ",(0,i.kt)("inlineCode",{parentName:"p"},"EnumValues")," object) to allow users to pick from only those.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"properties")," Object defining the properties for the entity schema."))),(0,i.kt)("h3",{id:"sample-entity-schema"},"Sample entity schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildSchema, EntityReference } from "dist/index";\n\ntype Product = {\n    name: string;\n    main_image: string;\n    available: boolean;\n    price: number;\n    related_products: EntityReference[];\n    publisher: {\n        name: string;\n        external_id: string;\n    }\n}\n\nexport const productSchema = buildSchema<Product>({\n    name: "Product",\n    properties: {\n        name: {\n            dataType: "string",\n            title: "Name",\n            config: {\n                multiline: true\n            },\n            validation: { required: true }\n        },\n        main_image: {\n            dataType: "string",\n            title: "Image",\n            config: {\n                storageMeta: {\n                    mediaType: "image",\n                    storagePath: "images",\n                    acceptedFiles: ["image/*"],\n                    metadata: {\n                        cacheControl: "max-age=1000000"\n                    }\n                }\n            },\n            description: "Upload field for images",\n            validation: {\n                required: true\n            }\n        },\n        available: {\n            dataType: "boolean",\n            title: "Available",\n            columnWidth: 100\n        },\n        price: ({ values }) => ({\n            dataType: "number",\n            title: "Price",\n            validation: {\n                requiredMessage: "You must set a price between 0 and 1000",\n                min: 0,\n                max: 1000\n            },\n            disabled: !values.available && {\n                clearOnDisabled: true,\n                disabledMessage: "You can only set the price on available items"\n            },\n            description: "Price with range validation"\n        }),\n        related_products: {\n            dataType: "array",\n            title: "Related products",\n            description: "Reference to self",\n            of: {\n                dataType: "reference",\n                path: "products"\n            }\n        },\n        publisher: {\n            title: "Publisher",\n            description: "This is an example of a map property",\n            dataType: "map",\n            properties: {\n                name: {\n                    title: "Name",\n                    dataType: "string"\n                },\n                external_id: {\n                    title: "External id",\n                    dataType: "string"\n                }\n            }\n        }\n    }\n});\n')))}m.isMDXComponent=!0}}]);