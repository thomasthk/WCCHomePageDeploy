"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2746],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(f,a(a({ref:t},c),{},{components:n})):r.createElement(f,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9236:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),a=["components"],l={id:"custom_fields",title:"Custom fields",sidebar_label:"Custom fields"},s=void 0,p={unversionedId:"entities/custom_fields",id:"entities/custom_fields",title:"Custom fields",description:"If you need a custom field for your property you can do it by passing a React",source:"@site/docs/entities/custom_fields.md",sourceDirName:"entities",slug:"/entities/custom_fields",permalink:"/docs/entities/custom_fields",tags:[],version:"current",frontMatter:{id:"custom_fields",title:"Custom fields",sidebar_label:"Custom fields"},sidebar:"docsSidebar",previous:{title:"Conditional fields",permalink:"/docs/entities/conditional_fields"},next:{title:"Custom previews",permalink:"/docs/entities/custom_previews"}},c=[{value:"Example",id:"example",children:[],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"If you need a custom field for your property you can do it by passing a React\ncomponent to the ",(0,i.kt)("inlineCode",{parentName:"p"},"Field")," prop of a property ",(0,i.kt)("inlineCode",{parentName:"p"},"config"),". The React component must\naccept the props of type ",(0,i.kt)("a",{parentName:"p",href:"../api/interfaces/fieldprops"},(0,i.kt)("inlineCode",{parentName:"a"},"FieldProps")),".\nThe bare minimum you need to implement\nis a field that displays the received ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," and uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"setValue")," callback."),(0,i.kt)("p",null,"You can also pass custom props to your custom field, which you then receive in\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"customProps")," prop."),(0,i.kt)("p",null,"If you are developing a custom field and need to access the values of the\nentity, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"context")," field in FieldProps."),(0,i.kt)("p",null,"You can check all the props ",(0,i.kt)("a",{parentName:"p",href:"../api/interfaces/fieldprops"},(0,i.kt)("inlineCode",{parentName:"a"},"FieldProps"))),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("p",null,"This is an example of a custom TextField that takes the background color as a prop"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { TextField, Theme } from "@mui/material";\nimport makeStyles from "@mui/styles/makeStyles";\nimport { FieldDescription, FieldProps } from "dist/index";\n\ninterface CustomColorTextFieldProps {\n    color: string\n}\n\nconst useStyles = makeStyles<Theme, { customColor: string }>(() => ({\n    root: ({ customColor }) => ({\n        backgroundColor: customColor\n    })\n}));\n\nexport default function CustomColorTextField({\n                                                 property,\n                                                 value,\n                                                 setValue,\n                                                 customProps,\n                                                 touched,\n                                                 error,\n                                                 isSubmitting,\n                                                 context, // the rest of the entity values here\n                                                 ...props\n                                             }: FieldProps<string, CustomColorTextFieldProps>) {\n\n    const classes = useStyles({ customColor: customProps.color });\n\n    return (\n        <>\n            <TextField required={property.validation?.required}\n                       classes={{\n                           root: classes.root\n                       }}\n                       error={!!error}\n                       disabled={isSubmitting}\n                       label={property.title}\n                       value={value ?? ""}\n                       onChange={(evt: any) => {\n                           setValue(\n                               evt.target.value\n                           );\n                       }}\n                       helperText={error}\n                       fullWidth\n                       variant={"filled"}/>\n\n            <FieldDescription property={property}/>\n        </>\n\n    );\n\n}\n')),(0,i.kt)("p",null,"...and how it is used:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'export const blogSchema = buildSchema({\n    name: "Blog entry",\n    properties: {\n        // ...\n        gold_text: {\n            title: "Gold text",\n            description: "This field is using a custom component defined by the developer",\n            dataType: "string",\n            config: {\n                Field: CustomColorTextField,\n                customProps: {\n                    color: "gold"\n                }\n            }\n        }\n    }\n});\n')))}d.isMDXComponent=!0}}]);