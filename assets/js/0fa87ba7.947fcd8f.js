"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3881],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=s(n),c=a,f=m["".concat(p,".").concat(c)]||m[c]||d[c]||i;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2951:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),l=["components"],o={id:"string",title:"String",sidebar_label:"String"},p=void 0,s={unversionedId:"entities/properties/string",id:"entities/properties/string",title:"String",description:"The string property can be used with many form fields, from",source:"@site/docs/entities/properties/string.md",sourceDirName:"entities/properties",slug:"/entities/properties/string",permalink:"/docs/entities/properties/string",tags:[],version:"current",frontMatter:{id:"string",title:"String",sidebar_label:"String"},sidebar:"docsSidebar",previous:{title:"Properties",permalink:"/docs/entities/properties/properties_intro"},next:{title:"Number",permalink:"/docs/entities/properties/number"}},u=[{value:"<code>config</code>",id:"config",children:[{value:"<code>storageMeta</code>",id:"storagemeta",children:[],level:3},{value:"<code>url</code>",id:"url",children:[],level:3},{value:"<code>enumValues</code>",id:"enumvalues",children:[],level:3},{value:"<code>multiline</code>",id:"multiline",children:[],level:3},{value:"<code>markdown</code>",id:"markdown",children:[],level:3},{value:"<code>previewAsTag</code>",id:"previewastag",children:[],level:3}],level:2},{value:"<code>validation</code>",id:"validation",children:[],level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The string property can be used with many form fields, from\nsimple text fields, to select fields, markdown or file uploads (the\nstorage key, or the url gets saved)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildProperty } from "./builders";\n\nconst nameProperty = buildProperty({\n    title: "Name",\n    description: "Basic string property with validation",\n    validation: { required: true },\n    dataType: "string"\n});\n')),(0,i.kt)("h2",{id:"config"},(0,i.kt)("inlineCode",{parentName:"h2"},"config")),(0,i.kt)("h3",{id:"storagemeta"},(0,i.kt)("inlineCode",{parentName:"h3"},"storageMeta")),(0,i.kt)("p",null,"You can specify a ",(0,i.kt)("inlineCode",{parentName:"p"},"StorageMeta")," configuration. It is used to\nindicate that this string refers to a path in Google Cloud Storage."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mediaType")," Media type of this reference, used for displaying the\npreview."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"storagePath")," Absolute path in your bucket. You can specify it\ndirectly or use a callback"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"acceptedFiles")," File MIME types that can be uploaded to this\nreference."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"metadata")," Specific metadata set in your uploaded file."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"fileName")," You can specify a fileName callback if you need to\ncustomize the name of the file"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"storeUrl")," When set to ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),", this flag indicates that the download\nURL of the file will be saved in Firestore instead of the Cloud\nstorage path. Note that the generated URL may use a token that, if\ndisabled, may make the URL unusable and lose the original reference to\nCloud Storage, so it is not encouraged to use this flag. Defaults to\nfalse.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildProperty } from "./builders";\n\nconst imageProperty = buildProperty({\n    dataType: "string",\n    config: {\n        storageMeta: {\n            mediaType: "image",\n            storagePath: (context) => {\n                return "images";\n            },\n            acceptedFiles: ["image/*"],\n            fileName: (context) => {\n                return context.file.name;\n            }\n        }\n    }\n});\n')),(0,i.kt)("h3",{id:"url"},(0,i.kt)("inlineCode",{parentName:"h3"},"url")),(0,i.kt)("p",null,"If the value of this property is a URL, you can set this flag\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," to add a link, or one of the supported media types to render a preview."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildProperty } from "./builders";\n\nconst amazonLinkProperty = buildProperty({\n    dataType: "string",\n    title: "Amazon link",\n    config: {\n        url: true\n    }\n});\n')),(0,i.kt)("h3",{id:"enumvalues"},(0,i.kt)("inlineCode",{parentName:"h3"},"enumValues")),(0,i.kt)("p",null,"You can use the enum values providing a map of possible\nexclusive values the property can take, mapped to the label that it is\ndisplayed in the dropdown. You can use a simple object with the format\n",(0,i.kt)("inlineCode",{parentName:"p"},"value")," => ",(0,i.kt)("inlineCode",{parentName:"p"},"label"),", or with the format ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," => ",(0,i.kt)("a",{parentName:"p",href:"../../api/interfaces/enumvalueconfig"},(0,i.kt)("inlineCode",{parentName:"a"},"EnumValueConfig"))," if you\nneed extra customization, (like disabling specific options or assigning\ncolors). If you need to ensure the order of the elements, you can pass\na ",(0,i.kt)("inlineCode",{parentName:"p"},"Map")," instead of a plain object."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildProperty } from "./builders";\n\nconst amazonLinkProperty = buildProperty({\n    dataType: "string",\n    title: "Amazon link",\n    config: {\n        enumValues: {\n            "es": "Spanish",\n            "de": "German",\n            "en": "English",\n            "it": "Italian",\n            "fr": {\n                label: "French",\n                disabled: true\n            }\n        }\n    }\n});\n')),(0,i.kt)("h3",{id:"multiline"},(0,i.kt)("inlineCode",{parentName:"h3"},"multiline")),(0,i.kt)("p",null,"Is this string property long enough, so it should be displayed\nin a multiple line field. Defaults to false. If set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", the number\nof lines adapts to the content."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildProperty } from "./builders";\n\nconst property = buildProperty({\n    title: "Description",\n    dataType: "string",\n    config: {\n        multiline: true\n    }\n});\n')),(0,i.kt)("h3",{id:"markdown"},(0,i.kt)("inlineCode",{parentName:"h3"},"markdown")),(0,i.kt)("p",null,"Should this string property be displayed as a markdown field.\nIf ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", the field is rendered as a text editors that supports markdown\nhighlight syntax. It also includes a preview of the result."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildProperty } from "./builders";\n\nconst property = buildProperty({\n    dataType: "string",\n    title: "Text",\n    config: {\n        markdown: true\n    }\n});\n')),(0,i.kt)("h3",{id:"previewastag"},(0,i.kt)("inlineCode",{parentName:"h3"},"previewAsTag")),(0,i.kt)("p",null,"Should this string be rendered as a tag instead of just text."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildProperty } from "./builders";\n\nconst property = buildProperty({\n    title: "Tags",\n    description: "Example of generic array",\n    dataType: "array",\n    of: {\n        dataType: "string",\n        config: {\n            previewAsTag: true\n        }\n    }\n});\n')),(0,i.kt)("h2",{id:"validation"},(0,i.kt)("inlineCode",{parentName:"h2"},"validation")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"required")," Should this field be compulsory."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"requiredMessage")," Message to be displayed as a validation error."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"unique")," The value of this field must be unique in this collection."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"uniqueInArray")," If you set it to ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),", the user will only be allowed to\nhave the value of that property once in the parent\n",(0,i.kt)("inlineCode",{parentName:"li"},"ArrayProperty"),". It works on direct children properties or on first level\nchildren of a ",(0,i.kt)("inlineCode",{parentName:"li"},"MapProperty")," (if set as the ",(0,i.kt)("inlineCode",{parentName:"li"},".of")," property of\nthe ",(0,i.kt)("inlineCode",{parentName:"li"},"ArrayProperty"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"length")," Set a required length for the string value."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"min")," Set a minimum length limit for the string value."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"max")," Set a maximum length limit for the string value."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"matches")," Provide an arbitrary regex to match the value against."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"email")," Validates the value as an email address via a regex."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"url")," Validates the value as a valid URL via a regex."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"trim")," Transforms string values by removing leading and trailing\nwhitespace."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"lowercase")," Transforms the string value to lowercase."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"uppercase")," Transforms the string value to uppercase.")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Based on your configuration the form field widgets that are created are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../api/functions/textfield"},(0,i.kt)("inlineCode",{parentName:"a"},"TextField"))," generic text field"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../api/functions/storageuploadfield"},(0,i.kt)("inlineCode",{parentName:"a"},"StorageUploadField"))," the property has a\nstorage configuration."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../api/functions/markdownfield"},(0,i.kt)("inlineCode",{parentName:"a"},"MarkdownField."))," the property has a\nmarkdown configuration."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../api/functions/select"},(0,i.kt)("inlineCode",{parentName:"a"},"Select"))," if ",(0,i.kt)("inlineCode",{parentName:"li"},"enumValues")," are set in the string config, this field renders a select\nwhere each option is a colored chip.")),(0,i.kt)("p",null,"Links:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"../../api/interfaces/stringproperty"},"API"))))}m.isMDXComponent=!0}}]);