"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6443],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,h=u["".concat(s,".").concat(m)]||u[m]||p[m]||i;return t?r.createElement(h,a(a({ref:n},d),{},{components:t})):r.createElement(h,a({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},3763:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var r=t(3117),o=t(102),i=(t(7294),t(3905)),a=["components"],l={id:"use_side_entity_controller",title:"useSideEntityController",sidebar_label:"useSideEntityController"},s=void 0,c={unversionedId:"hooks/use_side_entity_controller",id:"hooks/use_side_entity_controller",title:"useSideEntityController",description:"Please note that in order to use these hooks you must be in",source:"@site/docs/hooks/use_side_entity_controller.md",sourceDirName:"hooks",slug:"/hooks/use_side_entity_controller",permalink:"/docs/hooks/use_side_entity_controller",tags:[],version:"current",frontMatter:{id:"use_side_entity_controller",title:"useSideEntityController",sidebar_label:"useSideEntityController"},sidebar:"docsSidebar",previous:{title:"useAuthController",permalink:"/docs/hooks/use_auth_controller"},next:{title:"useSnackbarController",permalink:"/docs/hooks/use_snackbar_controller"}},d=[{value:"Schema override handler",id:"schema-override-handler",children:[],level:3}],p={toc:d};function u(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Please note that in order to use these hooks you ",(0,i.kt)("strong",{parentName:"p"},"must")," be in\na component (you can't use them directly from a callback function).\nAnyhow, callbacks usually include a ",(0,i.kt)("inlineCode",{parentName:"p"},"FireCMSContext"),", which includes all\nthe controllers."))),(0,i.kt)("p",null,"You can use this controller to open the side entity view used to edit entities.\nThis is the same controller the CMS uses when you click on an entity in a collection\nview."),(0,i.kt)("p",null,"Using this controller you can open a form in a side dialog, also if the path and\nentity schema are not included in the main navigation defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"FireCMS"),"."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"If you want to override the entity schema of some entity or path, at the app\nlevel, you can pass a ",(0,i.kt)("inlineCode",{parentName:"p"},"SchemaOverrideHandler")," to your ",(0,i.kt)("inlineCode",{parentName:"p"},"FireCMS")," instance to set\nan override."))),(0,i.kt)("p",null,"The props provided by this context are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"close()")," Close the last panel"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"sidePanels")," List of side entity panels currently open"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"open (props: SideEntityPanelProps)"),"\nOpen a new entity sideDialog. By default, the schema and configuration of the\nview is fetched from the collections you have specified in the navigation. At\nleast you need to pass the path of the entity you would like to\nedit. You can set an entityId if you would like to edit and existing one\n(or a new one with that id). If you wish, you can also override\nthe ",(0,i.kt)("inlineCode",{parentName:"li"},"SchemaConfig")," (such as schema or subcollections) and choose to\noverride the ",(0,i.kt)("inlineCode",{parentName:"li"},"FireCMS")," level ",(0,i.kt)("inlineCode",{parentName:"li"},"SchemaOverrideHandler"),".")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { useSideEntityController } from "@camberi/firecms";\n\nexport function ExampleCMSView() {\n\n    const sideEntityController = useSideEntityController();\n\n    // You don\'t need to provide a schema if the collection path is mapped in\n    // the main navigation or you have set a `schemaResolver`\n    const customProductSchema = buildSchema({\n        name: "Product",\n        properties: {\n            name: {\n                title: "Name",\n                validation: { required: true },\n                dataType: "string"\n            },\n        }\n    });\n\n    return (\n        <Button\n            onClick={() => sideEntityController.open({\n                entityId: "B003WT1622",\n                path: "/products",\n                schema: customProductSchema\n            })}\n            color="primary">\n            Open entity with custom schema\n        </Button>\n    );\n}\n')),(0,i.kt)("h3",{id:"schema-override-handler"},"Schema override handler"),(0,i.kt)("p",null,"You may want to override the schema definition for particular entities in. In\nthat case you can define a schema resolver in the FireCMS level."),(0,i.kt)("p",null,"In order to do that, you can specify a ",(0,i.kt)("inlineCode",{parentName:"p"},"SchemaOverrideHandler")," that is in charge of\nresolving the ",(0,i.kt)("inlineCode",{parentName:"p"},"path")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"entityId")," and returning a ",(0,i.kt)("inlineCode",{parentName:"p"},"SchemaConfig"),", where you\ncan specify a custom ",(0,i.kt)("inlineCode",{parentName:"p"},"schema")," (including callbacks and custom views),\n",(0,i.kt)("inlineCode",{parentName:"p"},"permissions")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"subcollections")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildSchema, SchemaOverrideHandler } from "@camberi/firecms";\n\nconst customSchemaOverrideHandler: SchemaOverrideHandler = ({\n                                                  entityId,\n                                                  path\n                                              }: {\n    entityId?: string;\n    path: string;\n}) => {\n\n    if (entityId === "B0017TNJWY" && path === "products") {\n        const customProductSchema = buildSchema({\n            name: "Custom product",\n            properties: {\n                name: {\n                    title: "Name",\n                    description: "This entity is using a schema overridden by a schema resolver",\n                    validation: { required: true },\n                    dataType: "string"\n                }\n            }\n        });\n\n        return {\n            schema: customProductSchema,\n            // permissions: ...,\n            // subcollections: ...,\n        };\n    }\n};\n')),(0,i.kt)("p",null,"Then you can pass your ",(0,i.kt)("inlineCode",{parentName:"p"},"SchemaOverrideHandler")," to your ",(0,i.kt)("inlineCode",{parentName:"p"},"FirebaseCMSApp")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"FireCMS")))}u.isMDXComponent=!0}}]);