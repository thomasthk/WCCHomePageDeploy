"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4375],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(t),d=i,f=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return t?r.createElement(f,a(a({ref:n},p),{},{components:t})):r.createElement(f,a({ref:n},p))}));function d(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3051:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return m}});var r=t(3117),i=t(102),o=(t(7294),t(3905)),a=["components"],s={id:"permissions",title:"Permissions",sidebar_label:"Permissions"},l=void 0,c={unversionedId:"collections/permissions",id:"collections/permissions",title:"Permissions",description:"You can define the edit, create and delete permissions at the collection",source:"@site/docs/collections/permissions.md",sourceDirName:"collections",slug:"/collections/permissions",permalink:"/docs/collections/permissions",tags:[],version:"current",frontMatter:{id:"permissions",title:"Permissions",sidebar_label:"Permissions"},sidebar:"docsSidebar",previous:{title:"Saving and deleting callbacks",permalink:"/docs/collections/saving_callbacks"},next:{title:"Exporting data",permalink:"/docs/collections/exporting_data"}},p=[{value:"Simple permissions",id:"simple-permissions",children:[],level:3},{value:"Advanced permissions",id:"advanced-permissions",children:[],level:3}],u={toc:p};function m(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"You can define the ",(0,o.kt)("inlineCode",{parentName:"p"},"edit"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"delete")," permissions at the collection\nlevel, also depending on the logged-in user."),(0,o.kt)("p",null,"These define the actions that the logged user can perform over an entity."),(0,o.kt)("h3",{id:"simple-permissions"},"Simple permissions"),(0,o.kt)("p",null,"In the simpler case, you can directly assign the permissions"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildCollection } from "@camberi/firecms";\n\nbuildCollection({\n    path: "products",\n    schema: productSchema,\n    name: "Products",\n    permissions: {\n        edit: true,\n        create: true,\n        delete: false\n    }\n});\n')),(0,o.kt)("h3",{id:"advanced-permissions"},"Advanced permissions"),(0,o.kt)("p",null,"You can customise the permissions based on the user that is logged in, or any\nother criteria that fits your use case."),(0,o.kt)("p",null,"You can use a ",(0,o.kt)("inlineCode",{parentName:"p"},"PermissionBuilder"),", like in the example below, to customise the\nactions based on the logged user."),(0,o.kt)("p",null,'In the example below we check if we have previously saved the role "admin"\nin the extras field in the ',(0,o.kt)("inlineCode",{parentName:"p"},"AuthController"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildCollection } from "@camberi/firecms";\n\nbuildCollection({\n    path: "products",\n    schema: productSchema,\n    name: "Products",\n    permissions: ({\n                      entity,\n                      path,\n                      user,\n                      authController,\n                      context\n                  }) => {\n        const isAdmin = authController.extra?.roles.includes("admin");\n        return ({\n            edit: isAdmin,\n            create: isAdmin,\n            delete: isAdmin\n        });\n    }\n});\n')),(0,o.kt)("p",null,"Note that you can set the ",(0,o.kt)("inlineCode",{parentName:"p"},"extra")," parameter in the ",(0,o.kt)("inlineCode",{parentName:"p"},"AuthController")," to any data\nthat makes sense to you. Suggested places where you may want to set that\nparameter are ",(0,o.kt)("inlineCode",{parentName:"p"},"Authenticator")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"NavigationBuilder")," since they are initialised\nbefore the rest of the app."),(0,o.kt)("p",null,"Quick example of how the ",(0,o.kt)("inlineCode",{parentName:"p"},"extra.roles")," field in the previous example is\ninitialised:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'import { User as FirebaseUser } from "firebase/auth";\nimport { Authenticator } from "@camberi/firecms";\n\nconst myAuthenticator: Authenticator<FirebaseUser> = async ({\n                                                                user,\n                                                                authController,\n                                                                dataSource\n                                                            }) => {\n    // This is an example of retrieving async data related to the user\n    // and storing it in the user extra field\n    const sampleUserData = await Promise.resolve({\n        roles: ["admin"]\n    });\n    authController.setExtra(sampleUserData);\n\n    console.log("Allowing access to", user);\n    return true; // Allow\n};\n')))}m.isMDXComponent=!0}}]);