"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2651],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),u=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=u(e.components);return i.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(t),m=a,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||r;return t?i.createElement(f,s(s({ref:n},c),{},{components:t})):i.createElement(f,s({ref:n},c))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,s=new Array(r);s[0]=d;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var u=2;u<r;u++)s[u]=t[u];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2257:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var i=t(3117),a=t(102),r=(t(7294),t(3905)),s=["components"],o={id:"quickstart",title:"Quickstart",sidebar_label:"Quickstart"},l=void 0,u={unversionedId:"quickstart",id:"quickstart",title:"Quickstart",description:"Please note that in order to use FireCMS as described in this quickstart guide,",source:"@site/docs/quickstart.md",sourceDirName:".",slug:"/quickstart",permalink:"/docs/quickstart",tags:[],version:"current",frontMatter:{id:"quickstart",title:"Quickstart",sidebar_label:"Quickstart"},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/docs/"},next:{title:"Entity Schemas",permalink:"/docs/entities/entity_schemas"}},c=[{value:"Steps:",id:"steps",children:[],level:3}],p={toc:c};function d(e){var n=e.components,t=(0,a.Z)(e,s);return(0,r.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Please note that in order to use FireCMS as described in this quickstart guide,\nyou need an existing Firebase project with features enabled, such as Google\nauthentication, Firestore and Firebase storage.\nCheck the ",(0,r.kt)("a",{parentName:"p",href:"/docs/firebase_setup"},"Firebase setup section")," if you need additional\nsupport"))),(0,r.kt)("p",null,"Let's build a very simple CMS that creates a collection of products, with\nsome properties. It includes samples of some advanced features, such as\ndynamic conditional fields or references (to the same products' collection,\nfor simplicity)."),(0,r.kt)("p",null,"We are defining our ",(0,r.kt)("inlineCode",{parentName:"p"},"Product")," type for better type checking and code clarity,\nbut it is not compulsory."),(0,r.kt)("p",null,"Authentication and authorization are also enabled, and make use of the ",(0,r.kt)("inlineCode",{parentName:"p"},"extra"),"\nfield in the ",(0,r.kt)("inlineCode",{parentName:"p"},"authController")," to check for permissions."),(0,r.kt)("h3",{id:"steps"},"Steps:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create a new React app including Typescript:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"yarn create react-app my-cms --template typescript\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Go into the new directory:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cd my-cms\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install FireCMS and it's peer dependencies:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"yarn add @camberi/firecms firebase@^9 @mui/material@^5 @mui/icons-material@^5 @mui/lab @mui/styles@^5 @emotion/react @emotion/styled react-router@^6 react-router-dom@^6\n")),(0,r.kt)("p",null,"You can replace the content of the file App.tsx with the following sample code."),(0,r.kt)("p",null,"Remember to ",(0,r.kt)("strong",{parentName:"p"},"replace")," the Firebase config with the one you get after creating\na webapp in the Firebase console."),(0,r.kt)("p",null,"If you don't know where to find the Firebase app config, check the\n",(0,r.kt)("a",{parentName:"p",href:"/docs/firebase_setup"},"Firebase setup")," section"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\n\nimport { User as FirebaseUser } from "firebase/auth";\nimport {\n    Authenticator,\n    buildCollection,\n    buildProperty,\n    buildSchema,\n    EntityReference,\n    FirebaseCMSApp,\n    NavigationBuilder,\n    NavigationBuilderProps\n} from "@camberi/firecms";\n\nimport "typeface-rubik";\nimport "typeface-space-mono";\n\n// TODO: Replace with your config\nconst firebaseConfig = {\n    apiKey: "",\n    authDomain: "",\n    projectId: "",\n    storageBucket: "",\n    messagingSenderId: "",\n    appId: ""\n};\n\nconst locales = {\n    "en-US": "English (United States)",\n    "es-ES": "Spanish (Spain)",\n    "de-DE": "German"\n};\n\ntype Product = {\n    name: string;\n    price: number;\n    status: string;\n    published: boolean;\n    related_products: EntityReference[];\n    main_image: string;\n    tags: string[];\n    description: string;\n    categories: string[];\n    publisher: {\n        name: string;\n        external_id: string;\n    },\n    expires_on: Date\n}\n\nconst productSchema = buildSchema<Product>({\n    name: "Product",\n    properties: {\n        name: {\n            title: "Name",\n            validation: { required: true },\n            dataType: "string"\n        },\n        price: {\n            title: "Price",\n            validation: {\n                required: true,\n                requiredMessage: "You must set a price between 0 and 1000",\n                min: 0,\n                max: 1000\n            },\n            description: "Price with range validation",\n            dataType: "number"\n        },\n        status: {\n            title: "Status",\n            validation: { required: true },\n            dataType: "string",\n            description: "Should this product be visible in the website",\n            longDescription: "Example of a long description hidden under a tooltip. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin quis bibendum turpis. Sed scelerisque ligula nec nisi pellentesque, eget viverra lorem facilisis. Praesent a lectus ac ipsum tincidunt posuere vitae non risus. In eu feugiat massa. Sed eu est non velit facilisis facilisis vitae eget ante. Nunc ut malesuada erat. Nullam sagittis bibendum porta. Maecenas vitae interdum sapien, ut aliquet risus. Donec aliquet, turpis finibus aliquet bibendum, tellus dui porttitor quam, quis pellentesque tellus libero non urna. Vestibulum maximus pharetra congue. Suspendisse aliquam congue quam, sed bibendum turpis. Aliquam eu enim ligula. Nam vel magna ut urna cursus sagittis. Suspendisse a nisi ac justo ornare tempor vel eu eros.",\n            config: {\n                enumValues: {\n                    private: "Private",\n                    public: "Public"\n                }\n            }\n        },\n        published: ({ values }) => buildProperty({\n            title: "Published",\n            dataType: "boolean",\n            columnWidth: 100,\n            disabled: (\n                values.status === "public"\n                    ? false\n                    : {\n                        clearOnDisabled: true,\n                        disabledMessage: "Status must be public in order to enable this the published flag"\n                    }\n            )\n        }),\n        related_products: {\n            dataType: "array",\n            title: "Related products",\n            description: "Reference to self",\n            of: {\n                dataType: "reference",\n                path: "products"\n            }\n        },\n        main_image: buildProperty({ // The `buildProperty` method is an utility function used for type checking\n            title: "Image",\n            dataType: "string",\n            config: {\n                storageMeta: {\n                    mediaType: "image",\n                    storagePath: "images",\n                    acceptedFiles: ["image/*"]\n                }\n            }\n        }),\n        tags: {\n            title: "Tags",\n            description: "Example of generic array",\n            validation: { required: true },\n            dataType: "array",\n            of: {\n                dataType: "string"\n            }\n        },\n        description: {\n            title: "Description",\n            description: "Not mandatory but it\'d be awesome if you filled this up",\n            longDescription: "Example of a long description hidden under a tooltip. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin quis bibendum turpis. Sed scelerisque ligula nec nisi pellentesque, eget viverra lorem facilisis. Praesent a lectus ac ipsum tincidunt posuere vitae non risus. In eu feugiat massa. Sed eu est non velit facilisis facilisis vitae eget ante. Nunc ut malesuada erat. Nullam sagittis bibendum porta. Maecenas vitae interdum sapien, ut aliquet risus. Donec aliquet, turpis finibus aliquet bibendum, tellus dui porttitor quam, quis pellentesque tellus libero non urna. Vestibulum maximus pharetra congue. Suspendisse aliquam congue quam, sed bibendum turpis. Aliquam eu enim ligula. Nam vel magna ut urna cursus sagittis. Suspendisse a nisi ac justo ornare tempor vel eu eros.",\n            dataType: "string",\n            columnWidth: 300\n        },\n        categories: {\n            title: "Categories",\n            validation: { required: true },\n            dataType: "array",\n            of: {\n                dataType: "string",\n                config: {\n                    enumValues: {\n                        electronics: "Electronics",\n                        books: "Books",\n                        furniture: "Furniture",\n                        clothing: "Clothing",\n                        food: "Food"\n                    }\n                }\n            }\n        },\n        publisher: {\n            title: "Publisher",\n            description: "This is an example of a map property",\n            dataType: "map",\n            properties: {\n                name: {\n                    title: "Name",\n                    dataType: "string"\n                },\n                external_id: {\n                    title: "External id",\n                    dataType: "string"\n                }\n            }\n        },\n        expires_on: {\n            title: "Expires on",\n            dataType: "timestamp"\n        }\n    }\n});\n\nconst localeSchema = buildSchema({\n    customId: locales,\n    name: "Locale",\n    properties: {\n        title: {\n            title: "Title",\n            validation: { required: true },\n            dataType: "string"\n        },\n        selectable: {\n            title: "Selectable",\n            description: "Is this locale selectable",\n            dataType: "boolean"\n        },\n        video: {\n            title: "Video",\n            dataType: "string",\n            validation: { required: false },\n            config: {\n                storageMeta: {\n                    mediaType: "video",\n                    storagePath: "videos",\n                    acceptedFiles: ["video/*"]\n                }\n            }\n        }\n    }\n});\n\nexport default function App() {\n\n    const navigation: NavigationBuilder = async ({\n                                                     user,\n                                                     authController\n                                                 }: NavigationBuilderProps) => {\n\n        return ({\n            collections: [\n                buildCollection({\n                    path: "products",\n                    schema: productSchema,\n                    name: "Products",\n                    permissions: ({ authController }) => ({\n                        edit: true,\n                        create: true,\n                        // we have created the roles object in the navigation builder\n                        delete: authController.extra.roles.includes("admin")\n                    }),\n                    subcollections: [\n                        buildCollection({\n                            name: "Locales",\n                            path: "locales",\n                            schema: localeSchema\n                        })\n                    ]\n                })\n            ]\n        });\n    };\n\n    const myAuthenticator: Authenticator<FirebaseUser> = async ({\n                                                                    user,\n                                                                    authController\n                                                                }) => {\n        // You can throw an error to display a message\n        if(user?.email?.includes("flanders")){\n            throw Error("Stupid Flanders!");\n        }\n        \n        console.log("Allowing access to", user?.email);\n        // This is an example of retrieving async data related to the user\n        // and storing it in the user extra field.\n        const sampleUserData = await Promise.resolve({\n            roles: ["admin"]\n        });\n        authController.setExtra(sampleUserData);\n        return true;\n    };\n\n    return <FirebaseCMSApp\n        name={"My Online Shop"}\n        authentication={myAuthenticator}\n        navigation={navigation}\n        firebaseConfig={firebaseConfig}\n    />;\n}\n')),(0,r.kt)("p",null,"Then simply run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"yarn start\n")),(0,r.kt)("p",null,"You should be able to see your FireCMS instance in your browser, awesome!"))}d.isMDXComponent=!0}}]);