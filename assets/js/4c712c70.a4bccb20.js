"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8959],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=a,f=p["".concat(c,".").concat(d)]||p[d]||u[d]||i;return n?r.createElement(f,o(o({ref:t},m),{},{components:n})):r.createElement(f,o({ref:t},m))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5740:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return m},default:function(){return p}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),o=["components"],s={id:"custom_schema_views",title:"Custom schema views",sidebar_label:"Custom schema views"},c=void 0,l={unversionedId:"entities/custom_schema_views",id:"entities/custom_schema_views",title:"Custom schema views",description:"FireCMS offers default form and table fields for common use cases and also allows",source:"@site/docs/entities/custom_schema_views.md",sourceDirName:"entities",slug:"/entities/custom_schema_views",permalink:"/docs/entities/custom_schema_views",tags:[],version:"current",frontMatter:{id:"custom_schema_views",title:"Custom schema views",sidebar_label:"Custom schema views"},sidebar:"docsSidebar",previous:{title:"Custom previews",permalink:"/docs/entities/custom_previews"},next:{title:"Collections",permalink:"/docs/collections/"}},m=[],u={toc:m};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"FireCMS offers default form and table fields for common use cases and also allows\noverriding fields if you need a custom implementation, but that might be not\nenough in certain cases, where you might want to have a full ",(0,i.kt)("strong",{parentName:"p"},"custom view related\nto one entity"),"."),(0,i.kt)("p",null,"In order to accomplish that you can pass an array of ",(0,i.kt)("inlineCode",{parentName:"p"},"EntityCustomView"),"\nto your schema. Like in this example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { EntityCustomView, buildSchema } from "dist/index";\n\nconst sampleView: EntityCustomView = {\n    path: "preview",\n    name: "Blog entry preview",\n    builder: ({ schema, entity, modifiedValues }) => (\n        // This is a custom component that you can build as any React component\n        <MyBlogPreviewComponent entity={entity}\n                                modifiedValues={modifiedValues}/>\n    )\n};\n\nconst blogSchema = buildSchema({\n    name: "Blog entry",\n    views: [\n        sampleView\n    ],\n    properties: {\n        name: {\n            title: "Name",\n            validation: { required: true },\n            dataType: "string"\n        },\n        header_image: {\n            title: "Header image",\n            dataType: "string",\n            config: {\n                storageMeta: {\n                    mediaType: "image",\n                    storagePath: "images",\n                    acceptedFiles: ["image/*"],\n                    metadata: {\n                        cacheControl: "max-age=1000000"\n                    }\n                }\n            }\n        },\n        content: {\n            title: "Content",\n            description: "Example of a complex array with multiple properties as children",\n            validation: { required: true },\n            dataType: "array",\n            columnWidth: 400,\n            oneOf: {\n                properties: {\n                    images: {\n                        title: "Images",\n                        dataType: "array",\n                        of: {\n                            dataType: "string",\n                            config: {\n                                storageMeta: {\n                                    mediaType: "image",\n                                    storagePath: "images",\n                                    acceptedFiles: ["image/*"]\n                                }\n                            }\n                        }\n                    },\n                    text: {\n                        dataType: "string",\n                        title: "Text",\n                        config: {\n                            markdown: true\n                        }\n                    },\n                    products: {\n                        title: "Products",\n                        dataType: "array",\n                        of: {\n                            dataType: "reference",\n                            path: "products"\n                        }\n                    }\n                }\n            }\n        }\n    }\n})\n')))}p.isMDXComponent=!0}}]);