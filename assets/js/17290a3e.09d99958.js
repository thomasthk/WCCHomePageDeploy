"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1574],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,h=u["".concat(s,".").concat(m)]||u[m]||c[m]||r;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9104:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var a=n(3117),i=n(102),r=(n(7294),n(3905)),o=["components"],l={id:"building_a_blog",title:"Building a blog",sidebar_label:"Building a blog"},s=void 0,p={unversionedId:"recipes/building_a_blog",id:"recipes/building_a_blog",title:"Building a blog",description:"blogexample",source:"@site/docs/recipes/blog.md",sourceDirName:"recipes",slug:"/recipes/building_a_blog",permalink:"/docs/recipes/building_a_blog",tags:[],version:"current",frontMatter:{id:"building_a_blog",title:"Building a blog",sidebar_label:"Building a blog"},sidebar:"docsSidebar",previous:{title:"Deployment",permalink:"/docs/deployment"},next:{title:"Custom CMSApp",permalink:"/docs/custom_cms_app"}},d=[{value:"Let&#39;s build a blog with FireCMS",id:"lets-build-a-blog-with-firecms",children:[{value:"Basic properties",id:"basic-properties",children:[],level:3},{value:"Conditional status field",id:"conditional-status-field",children:[],level:3},{value:"Content of the blog entry",id:"content-of-the-blog-entry",children:[],level:3},{value:"Creating a preview view",id:"creating-a-preview-view",children:[],level:3}],level:2},{value:"Complete code:",id:"complete-code",children:[],level:2}],c={toc:d};function u(e){var t=e.components,l=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"blog_example",src:n(6194).Z})),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"In this tutorial we assume you have set up a Firebase project and a FireCMS\ninstance. If you don't, check the ",(0,r.kt)("a",{parentName:"p",href:"/docs/firebase_setup"},"Quickstart")," and\n",(0,r.kt)("a",{parentName:"p",href:"/docs/firebase_setup"},"Firebase setup section")," sections"))),(0,r.kt)("p",null,"In this section we will break down the schema configuration we use to\nbuild the ",(0,r.kt)("a",{parentName:"p",href:"https://demo.firecms.co/c/blog"},"blog section in our demo"),"."),(0,r.kt)("p",null,"We don't need to explain the benefits of using a headless CMS instead of a\ntraditional blogging approach like WordPress, but here are a few:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"it is easier and faster to develop on, since there is no coupling between\nfrontend and backend."),(0,r.kt)("li",{parentName:"ul"},"since your frontend is independent, you are free to change it in any way you\nwant, same goes for the backend."),(0,r.kt)("li",{parentName:"ul"},"it is suited for omnichannel applications, you can use the same backend and\nCMS with multiple apps and websites"),(0,r.kt)("li",{parentName:"ul"},"smaller, specialised teams"),(0,r.kt)("li",{parentName:"ul"},"scalability"),(0,r.kt)("li",{parentName:"ul"},"less costs"),(0,r.kt)("li",{parentName:"ul"},"flexibility and simplicity")),(0,r.kt)("p",null,"When you are done implementing the steps in this tutorial, you may want to check\nhow to build a simple ",(0,r.kt)("strong",{parentName:"p"},"next.js")," frontend app (or any other frontend framework).\nWe suggest next.js since it uses React, and it will make things easier."),(0,r.kt)("h2",{id:"lets-build-a-blog-with-firecms"},"Let's build a blog with FireCMS"),(0,r.kt)("p",null,"This is the type that we will use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"type BlogEntry = {\n    name: string,\n    header_image: string,\n    created_at: Date,\n    status: string,\n    content: any[]\n}\n")),(0,r.kt)("h3",{id:"basic-properties"},"Basic properties"),(0,r.kt)("p",null,"First let's create some simple properties that will be saved at the root of our\ndocuments."),(0,r.kt)("p",null,"We want to have title, that must be always set, so we set the required\nprop in validation to true:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'buildProperty({\n    title: "Title",\n    validation: { required: true },\n    dataType: "string"\n})\n')),(0,r.kt)("p",null,"An image that will be on the top of the blog post:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'buildProperty({\n    title: "Header image",\n    dataType: "string",\n    config: {\n        storageMeta: {\n            mediaType: "image",\n            storagePath: "images",\n            acceptedFiles: ["image/*"],\n            metadata: {\n                cacheControl: "max-age=1000000"\n            }\n        }\n    }\n})\n')),(0,r.kt)("p",null,'and a "created at" date that gets ',(0,r.kt)("strong",{parentName:"p"},"autogenerated")," when the document\nis created."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'buildProperty( {\n    title: "Created at",\n    dataType: "timestamp",\n    autoValue: "on_create"\n})\n')),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"You could also add a date field that gets updated whenever a document is saved,\nwith this configuration:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'buildProperty( {\n    title: "Updated on",\n    dataType: "timestamp",\n    autoValue: "on_update"\n})\n')))),(0,r.kt)("h3",{id:"conditional-status-field"},"Conditional status field"),(0,r.kt)("p",null,"Now we want to add a ",(0,r.kt)("inlineCode",{parentName:"p"},"status")," string property that will have two possible values:\n",(0,r.kt)("inlineCode",{parentName:"p"},"published")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"draft"),". We only want to allow the ",(0,r.kt)("inlineCode",{parentName:"p"},"published"),"\nstate when the rest of the fields are correct. "),(0,r.kt)("p",null,"In this case we will keep it simple, and we will just check if the header image\nis set:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'buildProperty(({ values }) => ({\n    title: "Status",\n    validation: { required: true },\n    dataType: "string",\n    columnWidth: 140,\n    config: {\n        enumValues: {\n            published: {\n                label: "Published",\n                disabled: !values.header_image,\n            },\n            draft: "Draft"\n        }\n    }\n}))\n')),(0,r.kt)("h3",{id:"content-of-the-blog-entry"},"Content of the blog entry"),(0,r.kt)("p",null,"We want to make the content of our blog entries ",(0,r.kt)("strong",{parentName:"p"},"dynamic")," so that content\nmanagers are able to create complex entries with different components."),(0,r.kt)("p",null,"The content will be an array of objects, that will have a ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," attribute that\nwill work as a discriminator and a ",(0,r.kt)("inlineCode",{parentName:"p"},"value")," attribute."),(0,r.kt)("p",null,"We will define 3 types: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"images"),": an array of images "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"text"),": a Markdown text field"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"products"),": an array of references to another collection, ",(0,r.kt)("inlineCode",{parentName:"li"},"products")," in this\ncase.")),(0,r.kt)("p",null,"We use the ",(0,r.kt)("inlineCode",{parentName:"p"},"oneOf")," prop in array properties which is designed exactly for this\nuse case. You just need to define "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'buildProperty({\n    title: "Content",\n    description: "Example of a complex array with multiple properties as children",\n    validation: { required: true },\n    dataType: "array",\n    columnWidth: 400,\n    oneOf: {\n        typeField: "type", // you can ommit these `typeField` and `valueField` props to use the defaults\n        valueField: "value",\n        properties: {\n            images: buildProperty({\n                title: "Images",\n                dataType: "array",\n                of: buildProperty({\n                    dataType: "string",\n                    config: {\n                        storageMeta: {\n                            mediaType: "image",\n                            storagePath: "images",\n                            acceptedFiles: ["image/*"],\n                            metadata: {\n                                cacheControl: "max-age=1000000"\n                            }\n                        }\n                    }\n                }),\n                description: "This fields allows uploading multiple images at once and reordering"\n            }),\n            text: buildProperty({\n                dataType: "string",\n                title: "Text",\n                config: {\n                    markdown: true\n                }\n            }),\n            products: buildProperty({\n                title: "Products",\n                dataType: "array",\n                of: {\n                    dataType: "reference",\n                    path: "products" // you need to define a valid collection in this path\n                }\n            })\n        }\n    }\n})\n')),(0,r.kt)("p",null,"This array configuration will create objects in the datasource with the format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json5"},'{\n  // ...\n  content: [\n    {\n      "type": "text",\n      "value": "Sunglasses or sun glasses (informally called shades or sunnies; more names below) are a form of protective eyewear designed primarily to prevent bright sunlight and high-energy visible light from damaging or discomforting the eyes. They can sometimes function as a visual aid, as variously employed for conditions such as light sensitivity, displays, and ultraviolet protection, and to improve visual clarity. In the early 20th century, they were also known as sun cheaters (or sun glasses) and were made from cardboard, tin, and other metals, with lenses made from crudely ground glass. They were also available in the form of goggles, with improvements in technology, sunglasses have become more Earth-friendly, and the use of plastics and other modern materials is now commonplace. "\n    },\n    {\n      "type": "images",\n      "value": [\n        "images/photo-1511499767150-a48a237f0083.jpeg",\n        "images/photo-1577803645773-f96470509666.jpeg"\n      ]\n    },\n    {\n      "type": "text",\n      "value": "Sunglasses have long been associated with celebrities and film actors primarily from a desire to mask their identity. Since the 1940s, sunglasses have been popular as a fashion accessory, especially on the beach. "\n    },\n    {\n      "type": "products",\n      "value": [\n        { \n          "id": "B001UQ71F0",\n          "path": "products",\n        },\n        {\n          "id": "B001UQ71F0",\n          "path": "products",\n        }  \n      ]\n    }\n  ],\n  // ...\n}\n')),(0,r.kt)("h3",{id:"creating-a-preview-view"},"Creating a preview view"),(0,r.kt)("p",null,"Let's make use of another feature of FireCMS: custom views for entities!"),(0,r.kt)("p",null,"FireCMS allows you to add additional views to your entity views, that are\ndefined as React components. The props you receive for building this\ncomponent are the entity schema, the original entity and the modified values."),(0,r.kt)("p",null,"In this case, we will create some React components to represent our blog entry\nlike the frontend app would do. This is the same code that you could\nuse in any SSR framework using React, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"next.js")),(0,r.kt)("p",null,"You could also have more complex setup that sends your data to your SSR app\nthrough an API and render the result."),(0,r.kt)("p",null,"You can find the code for ",(0,r.kt)("inlineCode",{parentName:"p"},"BlogEntryPreview")," in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Camberi/firecms/blob/master/example/src/SampleApp/custom_schema_view/BlogEntryPreview.tsx"},"https://github.com/Camberi/firecms/blob/master/example/src/SampleApp/custom_schema_view/BlogEntryPreview.tsx")),(0,r.kt)("h2",{id:"complete-code"},"Complete code:"),(0,r.kt)("p",null,"If we put together all the parts that we have build in this tutorial,\nwe get the following code for the blog schema:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildSchema, buildProperty } from "@camberi/firecms";\n\nexport const blogSchema = buildSchema({\n    name: "Blog entry",\n    views: [{\n        path: "preview",\n        name: "Preview",\n        builder: (props) => <BlogEntryPreview {...props}/>\n    }],\n    properties: {\n        name: buildProperty({\n            title: "Name",\n            validation: { required: true },\n            dataType: "string"\n        }),\n        header_image: buildProperty({\n            title: "Header image",\n            dataType: "string",\n            config: {\n                storageMeta: {\n                    mediaType: "image",\n                    storagePath: "images",\n                    acceptedFiles: ["image/*"],\n                    metadata: {\n                        cacheControl: "max-age=1000000"\n                    }\n                }\n            }\n        }),\n        content: buildProperty({\n            title: "Content",\n            description: "Example of a complex array with multiple properties as children",\n            validation: { required: true },\n            dataType: "array",\n            columnWidth: 400,\n            oneOf: {\n                typeField: "type", // you can ommit these `typeField` and `valueField` props to use the defaults\n                valueField: "value",\n                properties: {\n                    images: buildProperty({\n                        title: "Images",\n                        dataType: "array",\n                        of: buildProperty({\n                            dataType: "string",\n                            config: {\n                                storageMeta: {\n                                    mediaType: "image",\n                                    storagePath: "images",\n                                    acceptedFiles: ["image/*"],\n                                    metadata: {\n                                        cacheControl: "max-age=1000000"\n                                    }\n                                }\n                            }\n                        }),\n                        description: "This fields allows uploading multiple images at once and reordering"\n                    }),\n                    text: buildProperty({\n                        dataType: "string",\n                        title: "Text",\n                        config: {\n                            markdown: true\n                        }\n                    }),\n                    products: buildProperty({\n                        title: "Products",\n                        dataType: "array",\n                        of: {\n                            dataType: "reference",\n                            path: "products" // you need to define a valid collection in this path\n                        }\n                    })\n                }\n            }\n        }),\n        status: buildProperty(({ values }) => ({\n            title: "Status",\n            validation: { required: true },\n            dataType: "string",\n            columnWidth: 140,\n            config: {\n                enumValues: {\n                    published: {\n                        label: "Published",\n                        disabled: !values.header_image,\n                    },\n                    draft: "Draft"\n                }\n            }\n        }))\n    },\n    defaultValues: {\n        status: "draft"\n    }\n})\n')))}u.isMDXComponent=!0},6194:function(e,t,n){t.Z=n.p+"assets/images/blog_example-fa21e048e16c4c853b157b1ae20cb2a5.png"}}]);