"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6193],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,f=m["".concat(u,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(f,l(l({ref:t},s),{},{components:n})):r.createElement(f,l({ref:t},s))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},86:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var r=n(3117),i=n(102),a=(n(7294),n(3905)),l=["components"],o={id:"number",title:"Number",sidebar_label:"Number"},u=void 0,p={unversionedId:"entities/properties/number",id:"entities/properties/number",title:"Number",description:"config",source:"@site/docs/entities/properties/number.md",sourceDirName:"entities/properties",slug:"/entities/properties/number",permalink:"/docs/entities/properties/number",tags:[],version:"current",frontMatter:{id:"number",title:"Number",sidebar_label:"Number"},sidebar:"docsSidebar",previous:{title:"String",permalink:"/docs/entities/properties/string"},next:{title:"Boolean",permalink:"/docs/entities/properties/boolean"}},s=[{value:"<code>config</code>",id:"config",children:[{value:"<code>enumValues</code>",id:"enumvalues",children:[],level:3}],level:2},{value:"<code>validation</code>",id:"validation",children:[],level:2}],c={toc:s};function m(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildProperty } from "./builders";\n\nconst rangeProperty = buildProperty({\n    title: "Range",\n    validation: {\n        min: 0,\n        max: 3\n    },\n    dataType: "number"\n});\n')),(0,a.kt)("h2",{id:"config"},(0,a.kt)("inlineCode",{parentName:"h2"},"config")),(0,a.kt)("h3",{id:"enumvalues"},(0,a.kt)("inlineCode",{parentName:"h3"},"enumValues")),(0,a.kt)("p",null,"You can use the enum values providing a map of possible\nexclusive values the property can take, mapped to the label that it is\ndisplayed in the dropdown."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import { buildProperty } from "./builders";\n\nconst property = buildProperty({\n    title: "Status",\n    dataType: "number",\n    config: {\n        enumValues: new Map([\n            ["-1", buildEnumValueConfig({\n                label: "Lightly tense",\n                color: "redLighter"\n            })],\n            ["0", buildEnumValueConfig({\n                label: "Normal",\n                color: "grayLight"\n            })],\n            ["1", buildEnumValueConfig({\n                label: "Lightly relaxed",\n                color: "blueLighter"\n            })]\n        ])\n    }\n});\n')),(0,a.kt)("h2",{id:"validation"},(0,a.kt)("inlineCode",{parentName:"h2"},"validation")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"required")," Should this field be compulsory."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"requiredMessage")," Message to be displayed as a validation error."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"min")," Set the minimum value allowed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"max")," Set the maximum value allowed."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"lessThan")," Value must be less than."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"moreThan")," Value must be more than."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"positive")," Value must be a positive number."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"negative")," Value must be a negative number."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"integer")," Value must be an integer.")),(0,a.kt)("hr",null),(0,a.kt)("p",null,"The widget that gets created is"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../../api/functions/textfield"},(0,a.kt)("inlineCode",{parentName:"a"},"TextField"))," generic text field"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../../api/functions/select"},(0,a.kt)("inlineCode",{parentName:"a"},"Select"))," if ",(0,a.kt)("inlineCode",{parentName:"li"},"enumValues")," are set in the string config, this field renders a select\nwhere each option is a colored chip.")),(0,a.kt)("p",null,"Links:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"../../api/interfaces/numberproperty"},"API"))))}m.isMDXComponent=!0}}]);